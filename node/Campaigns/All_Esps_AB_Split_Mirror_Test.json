{
	"info": {
		"_postman_id": "10d4130c-c4a6-45a8-864b-1a9aa8b59c23",
		"name": "All_Esps_AB_Split_Mirror_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6765444"
	},
	"item": [
		{
			"name": "Get variable from webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.globals.set(\"campaign_id_ae_ab_split_mirror_test \", jsonData.campaign_id_ae_ab_split_mirror_test);",
							"if(parseInt(jsonData.mail_count) ===1 )",
							"{",
							"    postman.setNextRequest('Clear_webhook');",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/webhook_testing/get/{{env}}-All_Esps_AB_Split_Campaign_Mirror_Test-{{connectionId}}",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"webhook_testing",
						"get",
						"{{env}}-All_Esps_AB_Split_Campaign_Mirror_Test-{{connectionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Campaign Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"if(pm.response.code === 200){",
							"    if((jsonData.payload) instanceof Array)",
							"    {",
							"        postman.setNextRequest('Clear_webhook');",
							"    }",
							"    else",
							"    {",
							"        var tableHtml = \"<!DOCTYPE html><html lang='en'><head><meta charset='utf-8'><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css'></head><style type='text/css'>td{width:20% !important;}</style><body><div class='container'><h2>Campaing Test Cases Detail</h2><div style='font-size: 16px;'><span style='background-color: red;color: white;padding:5px;'><b>Message</b></span><b><span style='color: blue;'>&nbsp;&nbsp;&nbsp;&nbsp;\"+jsonData.payload.comment.replace(/(<([^>]+)>)/gi, '')+\"</span></b></div><br><table border='1' style='width: 80%;'><tbody>\"",
							"        if(jsonData.payload.account_id !== undefined && jsonData.payload.account_id !== null){",
							"        tableHtml += \"<tr><td style='width: 20%;'>Account Id</td><td style='width: 50%;'>\"+jsonData.payload.account_id+\"</td></tr>\"",
							"        }",
							"        if(jsonData.payload.list_id !== undefined && jsonData.payload.list_id !== null){",
							"        tableHtml +=\"<tr><td style='width: 20%;'>List Id</td><td style='width: 50%;'>\"+jsonData.payload.list_id+\"</td></tr>\"",
							"        }",
							"        if(jsonData.payload.id !== undefined && jsonData.payload.id !== null){",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Campaign Id</td><td style='width: 50%;'>\"+jsonData.payload.id+\"</td></tr>\"",
							"        }",
							"        if(jsonData.payload.name !== undefined && jsonData.payload.name !== null){",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Campaing Name</td><td style='width: 50%;'>\"+jsonData.payload.name+\"</td></tr>\"",
							"        }",
							"        if(jsonData.payload.schedule_date !== undefined && jsonData.payload.schedule_date !== null){",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Schedule Date</td><td style='width: 50%;'>\"+(new Date(jsonData.payload.schedule_date*1000)).toUTCString()+\"</td></tr>\"",
							"        }",
							"        var connectionName='';",
							"        for(var i=0;i<jsonData.payload.distribution.length;i++)",
							"        {",
							"            if(jsonData.payload.distribution[i]['esp_id'] !== undefined && jsonData.payload.distribution[i]['esp_id'] !== null){",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Id \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['esp_id']+\"</td></tr>\"",
							"            }",
							"            if(jsonData.payload.distribution[i]['name'] !== undefined && jsonData.payload.distribution[i]['name'] !== null){",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Name \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['name']+\"</td></tr>\"",
							"            }",
							"            connectionName += jsonData.payload.distribution[i]['name']+\",\";",
							"            if(jsonData.payload.distribution[i]['esp_connection_id'] !== undefined && jsonData.payload.distribution[i]['esp_connection_id'] !== null){",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Connection Id \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['esp_connection_id']+\"</td></tr>\"",
							"            }",
							"        }",
							"        if(jsonData.payload.status_desc !== undefined && jsonData.payload.status_desc !== null){",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Status</td><td style='width: 50%;'>\"+jsonData.payload.status_desc+\"</td></tr>\"",
							"        }",
							"        // if(jsonData.payload.comment !== undefined && jsonData.payload.comment !== null){",
							"        // tableHtml +=\"<tr><td style='width: 20%;'>Message</td><td style='width: 50%;'>\"+jsonData.payload.comment.replace(/(<([^>]+)>)/gi, '')+\"</td></tr></tbody></table></div></body></html>\"",
							"        // }",
							"        tableHtml +=\"</tbody></table></div></body></html>\"",
							"        pm.globals.set(\"html_code\", tableHtml);",
							"        if(jsonData.payload.status_desc=='Completed with errors' || jsonData.payload.status_desc=='Error')",
							"        {",
							"            pm.globals.set(\"html_code\", tableHtml);",
							"            connectionName =connectionName.slice(0, -1);",
							"            pm.globals.set(\"esp_name\", connectionName);",
							"        }",
							"        else",
							"        {",
							"            postman.setNextRequest('Clear_webhook');",
							"        }",
							"    }",
							"}else{",
							"    postman.setNextRequest('Clear_webhook');",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"value": "{{username}}",
						"type": "text"
					},
					{
						"key": "X_PASSWORD",
						"value": "{{password}}",
						"type": "text"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"value": "{{account_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/mailings/{{campaign_id_ae_ab_split_mirror_test}}",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"mailings",
						"{{campaign_id_ae_ab_split_mirror_test}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Error Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recipients\": [\n        {{campaign_error_recipients}}\n    ],\n    \"email_message\": {\n        \"subject\": \"Error-Campaign Test Cases Detail with {{esp_name}} on {{ongage_env}}\",\n        \"content_html\": \"{{html_code}}\",\n        \"addresses\": \n        [{\n            \"from_name\": \"{{system_field_from_name-mailgun}}\",\n            \"from_address\": \"{{system_field_from_address-mailgun}}\",\n            \"reply_address\": \"{{system_field_from_address-mailgun}}\",\n            \"esp_connection_id\": {{connectionId-mailgun}}\n        }]\n    },\n  \"distribution\": [\n   {\n    \"esp_connection_id\": \"{{connectionId-mailgun}}\",\n    \"domain\": \"default\",\n    \"percent\": 100\n   }\n  ]}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/notify_transactions",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"notify_transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Clear_webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/webhook_testing/clean/{{env}}-All_Esps_Campaign_Mirror_Test-{{connectionId}}",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"webhook_testing",
						"clean",
						"{{env}}-All_Esps_Campaign_Mirror_Test-{{connectionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change contact status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.unset(\"campaign_id_ae_ab_split_mirror_test\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"list_id\": {{list_id}},\n    \"change_to\": \"resubscribe\",\n    \"emails\": [\n        \"ae_ab_sp_mirror_link_msg_1@hoohem.com\",\"ae_ab_sp_mirror_link_msg_2@hoohem.com\"\n    ]\n}"
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/v2/contacts/change_status",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"v2",
						"contacts",
						"change_status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Mail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/mbox/subject/delete/ALl Esp Mirror Page-{{connectionId}}",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"mbox",
						"subject",
						"delete",
						"ALl Esp Mirror Page-{{connectionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create and run campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"campaign_id_ae_ab_split_mirror_test\", jsonData.payload.id);",
							"pm.globals.unset(\"time\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"value": "{{username}}",
						"type": "text"
					},
					{
						"key": "X_PASSWORD",
						"value": "{{password}}",
						"type": "text"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"value": "{{account_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"AB-Split Message Quota-{{connectionId}}\",\n    \"type\": \"split\",\n    \"list_id\": {{list_id}},\n    \"split_type\": \"email\",\n    \"email_message\": [ \n        \"{{ae_a_split_mirror_message_id}}\",\n        \"{{all_esp_ab_winner_common_message}}\"\n    ],\n    \"segments\": [\n        \"{{ae_segment_id_msg_mirror_link}}\"\n    ],\n    \"distribution\": [\n        {\n            \"esp_connection_id\": {{connectionId}},\n            \"percent\": \"100\"\n        }\n    ],\n    \"schedule_date\": {{time}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "readmail1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseText = pm.response.text();",
							"var jsonData = pm.response.json()",
							"var count_0 = 0",
							"if(pm.response.code === 200){",
							"    count_0 = count_0 + 1",
							"    var fieldValue = responseText.split(\"~!@#~\");",
							"    pm.globals.set(\"all_esp_mirror_page_link_body\", fieldValue[1]);",
							"    pm.globals.set(\"all_esp_mirror_page_link\", jsonData.HTMLMirrorLinks[0]);",
							"}",
							"pm.globals.set(\"count_0\",count_0)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"ae_ab_sp_mirror_link_msg_1@hoohem.com\",\n    \"subject\": \"ALl Esp AB-Split Mirror Page Link-{{connectionId}}\",\n    \"timeout\": 60000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLast",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLast"
					]
				}
			},
			"response": []
		},
		{
			"name": "readmail 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseText = pm.response.text();",
							"var count_0 = pm.globals.get(\"count_0\")",
							"var jsonData = pm.response.json()",
							"if(pm.response.code === 200){",
							"    count_0 = count_0 + 1",
							"    var fieldValue = responseText.split(\"~!@#~\");",
							"    pm.globals.set(\"all_esp_mirror_page_link_body\", fieldValue[1]);",
							"    pm.globals.set(\"all_esp_mirror_page_link\", jsonData.HTMLMirrorLinks[0]);",
							"}",
							"pm.globals.unset(\"count_0\")",
							"if(count_0 != 1){",
							"    pm.test(\"Test All ESP Mirror Page Link is not working\", function() {",
							"        pm.expect(\"\").to.eql(\"mail not received\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"ae_ab_sp_mirror_link_msg_2@hoohem.com\",\n    \"subject\": \"ALl Esp AB-Split Mirror Page Link-{{connectionId}}\",\n    \"timeout\": 60000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLast",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLast"
					]
				}
			},
			"response": []
		},
		{
			"name": "readmail1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json();",
							"var count_0 = 0",
							"if(pm.response.code === 200){",
							"    count_0 = count_0 + 1",
							"     pm.test(\"Test All ESP Mirror Page Link is working\", function() {",
							"        pm.expect(jsonData.subject).to.eql(\"Test AB Winner all esp Common Message-\"+ pm.globals.get(\"connectionId\")+\"-\"+pm.environment.get(\"env\"));",
							"    });",
							"}",
							"pm.globals.set(\"count_0\",count_0)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"ae_ab_sp_mirror_link_msg_1@hoohem.com\",\n    \"subject\": \"Test AB Winner all esp Common Message-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLast",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLast"
					]
				}
			},
			"response": []
		},
		{
			"name": "readmail 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json();",
							"var count_0 = pm.globals.get(\"count_0\")",
							"if(pm.response.code === 200){",
							"    count_0 = count_0 + 1",
							"    pm.test(\"Test All ESP Mirror Page Link is not working\", function() {",
							"        pm.expect(jsonData.subject).to.eql(\"Test AB Winner all esp Common Message-\"+ pm.globals.get(\"connectionId\")+\"-\"+pm.environment.get(\"env\"));",
							"    });",
							"}",
							"pm.globals.unset(\"count_0\")",
							"if(count_0 != 1){",
							"    pm.test(\"Test All ESP Mirror Page Link is not working\", function() {",
							"        pm.expect(\"\").to.eql(\"mail not received\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"ae_ab_sp_mirror_link_msg_2@hoohem.com\",\n    \"subject\": \"Test AB Winner all esp Common Message-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLast",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLast"
					]
				}
			},
			"response": []
		},
		{
			"name": "Click_mail_link",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.text();",
							"",
							"if(jsonData !==null && jsonData !== '{}'){",
							"    var fieldValue = jsonData.split(\"~!@#~\");",
							"    pm.test(\"Test All ESP Mirror Page Link is working\", function () {",
							"        pm.expect(fieldValue[1]).to.eql(pm.globals.get(\"all_esp_mirror_page_link_body\"));",
							"    });",
							" }",
							" else{",
							"    pm.test(\"Test All ESP Mirror Page Link is not working\", function() {",
							"        pm.expect(\"\").to.eql(pm.globals.get(\"all_esp_mirror_page_link_body\"));",
							"    });",
							"}",
							"pm.globals.unset(\"all_esp_mirror_page_link\");",
							"pm.globals.unset(\"all_esp_mirror_page_link_body\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_mirror_page_link}}",
					"host": [
						"{{all_esp_mirror_page_link}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Campaign Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"if(pm.response.code === 200)\r",
							"{\r",
							"    if((jsonData.payload) instanceof Array)\r",
							"    {\r",
							"        pm.globals.set(\"mail_count\", 0);\r",
							"        postman.setNextRequest('Set_variable_in_webhook');\r",
							"    }\r",
							"    else\r",
							"    {\r",
							"        var tableHtml = \"<!DOCTYPE html><html lang='en'><head><meta charset='utf-8'><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css'></head><style type='text/css'>td{width:20% !important;}</style><body><div class='container'><h2>Campaing Test Cases Detail</h2><div style='font-size: 16px;'><span style='background-color: red;color: white;padding:5px;'><b>Message</b></span><b><span style='color: blue;'>&nbsp;&nbsp;&nbsp;&nbsp;\"+jsonData.payload.comment.replace(/(<([^>]+)>)/gi, '')+\"</span></b></div><br><table border='1' style='width: 80%;'><tbody>\"\r",
							"        if(jsonData.payload.account_id !== undefined && jsonData.payload.account_id !== null){\r",
							"        tableHtml += \"<tr><td style='width: 20%;'>Account Id</td><td style='width: 50%;'>\"+jsonData.payload.account_id+\"</td></tr>\"\r",
							"        }\r",
							"        if(jsonData.payload.list_id !== undefined && jsonData.payload.list_id !== null){\r",
							"        tableHtml +=\"<tr><td style='width: 20%;'>List Id</td><td style='width: 50%;'>\"+jsonData.payload.list_id+\"</td></tr>\"\r",
							"        }\r",
							"        if(jsonData.payload.id !== undefined && jsonData.payload.id !== null){\r",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Campaign Id</td><td style='width: 50%;'>\"+jsonData.payload.id+\"</td></tr>\"\r",
							"        }\r",
							"        if(jsonData.payload.name !== undefined && jsonData.payload.name !== null){\r",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Campaing Name</td><td style='width: 50%;'>\"+jsonData.payload.name+\"</td></tr>\"\r",
							"        }\r",
							"        if(jsonData.payload.schedule_date !== undefined && jsonData.payload.schedule_date !== null){\r",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Schedule Date</td><td style='width: 50%;'>\"+(new Date(jsonData.payload.schedule_date*1000)).toUTCString()+\"</td></tr>\"\r",
							"        }\r",
							"        var connectionName='';\r",
							"        for(var i=0;i<jsonData.payload.distribution.length;i++)\r",
							"        {\r",
							"            if(jsonData.payload.distribution[i]['esp_id'] !== undefined && jsonData.payload.distribution[i]['esp_id'] !== null){\r",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Id \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['esp_id']+\"</td></tr>\"\r",
							"            }\r",
							"            if(jsonData.payload.distribution[i]['name'] !== undefined && jsonData.payload.distribution[i]['name'] !== null){\r",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Name \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['name']+\"</td></tr>\"\r",
							"            }\r",
							"            connectionName += jsonData.payload.distribution[i]['name']+\",\";\r",
							"            if(jsonData.payload.distribution[i]['esp_connection_id'] !== undefined && jsonData.payload.distribution[i]['esp_connection_id'] !== null){\r",
							"            tableHtml +=\"<tr><td style='width: 20%;'>ESP Connection Id \"+ (i+1) +\"</td><td style='width: 50%;'>\"+jsonData.payload.distribution[i]['esp_connection_id']+\"</td></tr>\"\r",
							"            }\r",
							"        }\r",
							"        if(jsonData.payload.status_desc !== undefined && jsonData.payload.status_desc !== null){\r",
							"        tableHtml +=\"<tr><td style='width: 20%;'>Status</td><td style='width: 50%;'>\"+jsonData.payload.status_desc+\"</td></tr>\"\r",
							"        }\r",
							"        // if(jsonData.payload.comment !== undefined && jsonData.payload.comment !== null){\r",
							"        // tableHtml +=\"<tr><td style='width: 20%;'>Message</td><td style='width: 50%;'>\"+jsonData.payload.comment.replace(/(<([^>]+)>)/gi, '')+\"</td></tr></tbody></table></div></body></html>\"\r",
							"        // }\r",
							"        tableHtml +=\"</tbody></table></div></body></html>\"\r",
							"        pm.globals.set(\"html_code\", tableHtml);\r",
							"        if(jsonData.payload.status_desc=='Completed with errors' || jsonData.payload.status_desc=='Error')\r",
							"        {\r",
							"            pm.globals.set(\"html_code\", tableHtml);\r",
							"            pm.globals.set(\"mail_count\", 1);\r",
							"        }\r",
							"        else\r",
							"        {\r",
							"            pm.globals.set(\"mail_count\", 0);\r",
							"            postman.setNextRequest('Set_variable_in_webhook');\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else\r",
							"{\r",
							"    pm.globals.set(\"mail_count\", 0);\r",
							"    postman.setNextRequest('Set_variable_in_webhook');\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"value": "{{username}}",
						"type": "text"
					},
					{
						"key": "X_PASSWORD",
						"value": "{{password}}",
						"type": "text"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"value": "{{account_code}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/mailings/{{campaign_id_ae_ab_split_mirror_test}}",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"mailings",
						"{{campaign_id_ae_ab_split_mirror_test}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Error Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recipients\": [\n        {{campaign_error_recipients}}\n    ],\n    \"email_message\": {\n        \"subject\": \"Error - Campaign Test Cases Detail\",\n        \"content_html\": \"{{html_code}}\",\n        \"addresses\": \n        [{\n            \"from_name\": \"{{system_field_from_name-mailgun}}\",\n            \"from_address\": \"{{system_field_from_address-mailgun}}\",\n            \"reply_address\": \"{{system_field_from_address-mailgun}}\",\n            \"esp_connection_id\": {{connectionId-mailgun}}\n        }]\n    },\n  \"distribution\": [\n   {\n    \"esp_connection_id\": \"{{connectionId-mailgun}}\",\n    \"domain\": \"default\",\n    \"percent\": 100\n   }\n  ]}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/notify_transactions",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"notify_transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set_variable_in_webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.unset(\"campaign_id_ae_ab_split_mirror_test\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"campaign_id_ae_ab_split_mirror_test\": \"{{campaign_id_ae_ab_split_mirror_test}}\",\n    \"mail_count\": \"{{mail_count}}\"\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/webhook_testing/{{env}}-All_Esps_AB_Split_Campaign_Mirror_Test-{{connectionId}}",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"webhook_testing",
						"{{env}}-All_Esps_AB_Split_Campaign_Mirror_Test-{{connectionId}}"
					]
				}
			},
			"response": []
		}
	]
}