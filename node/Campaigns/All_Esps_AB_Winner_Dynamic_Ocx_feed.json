{
	"info": {
		"_postman_id": "02e19424-46ee-4e9f-bd18-f468238c8411",
		"name": "All_Esps_AB_Winner_Dynamic_Ocx_feed",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6765444"
	},
	"item": [
		{
			"name": "Change contact status",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"list_id\": {{list_id}},\n    \"change_to\": \"resubscribe\",\n    \"emails\": [\n        \"ae_abw_dy_of1@hoohem.com\",\n        \"ae_abw_dy_of2@hoohem.com\",\n        \"ae_abw_dy_of3@hoohem.com\"\n    ]\n}"
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/v2/contacts/change_status",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"v2",
						"contacts",
						"change_status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Contact Info1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.globals.set(\"ab_winner_all_esp_list_field_first_name1\", jsonData.payload.first_name)",
							"pm.globals.set(\"ab_winner_all_esp_list_field_address1\", jsonData.payload.address)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/contacts/by_email/ae_abw_dy_of_htm1@hoohem.com",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"contacts",
						"by_email",
						"ae_abw_dy_of_htm1@hoohem.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Contact Info2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.globals.set(\"ab_winner_all_esp_list_field_first_name2\", jsonData.payload.first_name)",
							"pm.globals.set(\"ab_winner_all_esp_list_field_address2\", jsonData.payload.address)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/contacts/by_email/ae_abw_dy_of_htm2@hoohem.com",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"contacts",
						"by_email",
						"ae_abw_dy_of_htm2@hoohem.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Contact Info3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.globals.set(\"ab_winner_all_esp_list_field_first_name3\", jsonData.payload.first_name)",
							"pm.globals.set(\"ab_winner_all_esp_list_field_address3\", jsonData.payload.address)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_domain}}/{{list_id}}/api/contacts/by_email/ae_abw_dy_of_htm3@hoohem.com",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"{{list_id}}",
						"api",
						"contacts",
						"by_email",
						"ae_abw_dy_of_htm3@hoohem.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Dynamic_Ocx_Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamic = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test ab-winner in ocx_feed_dynamic with nested loop is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[2]).to.equal(\"Rooms\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[0]).to.equal(\"Hilton\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[1]).to.equal(\"NYC\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[0]).to.equal(\"Room Type\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[1]).to.equal(\"Count\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[1]).to.equal(\"111\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[0]).to.equal(\"suit\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[1]).to.equal(\"222\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[0]).to.equal(\"Gorgeous\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[1]).to.equal(\"555\");",
							"    });",
							"    postman.setNextRequest(\"Test_Dynamic_Ocx_Feed_Html1\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Dynamic Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Dynamic Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamic = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test ab-winner in ocx_feed_dynamic with nested loop is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[2]).to.equal(\"Rooms\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[0]).to.equal(\"Hilton\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[1]).to.equal(\"NYC\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[0]).to.equal(\"Room Type\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[1]).to.equal(\"Count\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[1]).to.equal(\"111\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[0]).to.equal(\"suit\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[1]).to.equal(\"222\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[0]).to.equal(\"Gorgeous\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[1]).to.equal(\"555\");",
							"    });",
							"}",
							"if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Dynamic Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Dynamic_Ocx_Feed_Html1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamicHtml = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm1@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name1\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address1\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm2@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name2\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address2\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm3@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name3\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address3\");",
							"    }",
							"    pm.test(`Test Ab Winner in ocx_feed_dynamic_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[1]).to.equal(\"10\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[2]).to.equal(ab_winner_all_esp_list_field_first_name);",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[3]).to.equal(ab_winner_all_esp_list_field_address);",
							"    });",
							"    postman.setNextRequest(\"Test_Ocx_Feed_Html1\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"subject\":\"Test AB-Winner Send Message Id Dynamic Ocx Feed Html-{{connectionId}}-{{env}}\",\n\t\"timeout\":60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Dynamic Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamicHtml = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm1@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name1\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address1\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm2@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name2\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address2\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm3@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name3\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address3\");",
							"    }",
							"    pm.test(`Test Ab Winner in ocx_feed_dynamic_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[1]).to.equal(\"10\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[2]).to.equal(ab_winner_all_esp_list_field_first_name);",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[3]).to.equal(ab_winner_all_esp_list_field_address);",
							"    });",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"subject\":\"Test AB-Winner Send Message Id Dynamic Ocx Feed Html-{{connectionId}}-{{env}}\",\n\t\"timeout\":60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Ocx_Feed_Html1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedHtml = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[1]).to.equal(\"Ahmedabad\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[2]).to.equal(\"Ongage\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[3]).to.equal(\"Ahmedabad\");",
							"    });",
							"    postman.setNextRequest(\"Test_Ocx_Feed1\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winnner Send Message Id Ocx Feed Html-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedHtml = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[1]).to.equal(\"Ahmedabad\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[2]).to.equal(\"Ongage\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[3]).to.equal(\"Ahmedabad\");",
							"    });",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winnner Send Message Id Ocx Feed Html-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Ocx_Feed1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    var ocxFeedData = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[2]).to.equal(\"Link\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[1]).to.equal(\"India\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[2]).to.equal(\"www.test.com\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[0]).to.equal(\"Suit\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[1]).to.equal(\"Rajasthan\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[2]).to.equal(\"www.google.com\");",
							"    });",
							"    postman.setNextRequest(\"Test_ocx_feed_rss1\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    var ocxFeedData = xml2Json(fieldValue[1])",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[2]).to.equal(\"Link\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[1]).to.equal(\"India\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[2]).to.equal(\"www.test.com\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[0]).to.equal(\"Suit\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[1]).to.equal(\"Rajasthan\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[2]).to.equal(\"www.google.com\");",
							"    });",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_ocx_feed_rss1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxRSSTitle = fieldValue[1]",
							"    const ocxRSSLink = fieldValue[2]",
							"    const ocxRSSDesc = fieldValue[3]",
							"    count = count + 1",
							"    pm.test(`Test Ab winner in ocx_rss with title \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSTitle).to.equal(pm.environment.get(\"ocx_rss_title\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with link \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSLink).to.equal(pm.environment.get(\"ocx_rss_link\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with description \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSDesc).to.equal(pm.environment.get(\"ocx_rss_desc\"));",
							"    });",
							"    jsonData.headerLines.forEach(function(data, index) {",
							"    if(data.key.toLowerCase()===\"customheader\"){",
							"        pm.test(`Test customheader \"Is Working\" Time : ${jsonData.date}`, function() {",
							"            const header = data.line.split(\":\")",
							"            pm.expect(header[0].toLowerCase()).to.equal(\"customheader\")",
							"            pm.expect(header[1].toLowerCase().trim()).to.equal(\"test\");",
							"        });",
							"    }",
							"})",
							"    postman.setNextRequest(\"Create_and_send_campaign_Dynamic_ocx_feed\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed Rss-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed Rss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxRSSTitle = fieldValue[1]",
							"    const ocxRSSLink = fieldValue[2]",
							"    const ocxRSSDesc = fieldValue[3]",
							"    count = count + 1",
							"    pm.test(`Test Ab winner in ocx_rss with title \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSTitle).to.equal(pm.environment.get(\"ocx_rss_title\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with link \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSLink).to.equal(pm.environment.get(\"ocx_rss_link\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with description \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSDesc).to.equal(pm.environment.get(\"ocx_rss_desc\"));",
							"    });",
							"    jsonData.headerLines.forEach(function(data, index) {",
							"    if(data.key.toLowerCase()===\"customheader\"){",
							"        pm.test(`Test customheader \"Is Working\" Time : ${jsonData.date}`, function() {",
							"            const header = data.line.split(\":\")",
							"            pm.expect(header[0].toLowerCase()).to.equal(\"customheader\")",
							"            pm.expect(header[1].toLowerCase().trim()).to.equal(\"test\");",
							"        });",
							"    }",
							"})",
							"}",
							"",
							" if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed Rss-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_and_send_campaign_Dynamic_ocx_feed",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time_30\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\") , jsonData.payload.id);",
							"pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\") , jsonData.payload.name);",
							"pm.globals.unset(\"time_30\");",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"All Esp AB Winner Dynamic Ocx Feed\",\n\t\"type\": \"split\",\n\t\"list_id\": {{list_id}}, \n    \"split_type\": \"email\",\n    \"email_message\": [ {{msg_id_ab_win_send_dynamic_ocx_feed}},{{all_esp_ab_winner_common_message}} ],\n    \"segments\": [ \"{{all_esp_segment_id_ab_winner_dynamic_ocx_feed}}\" ],\n    \"distribution\": [\n    \t{\n            \"esp_connection_id\":{{connectionId}},\n            \"percent\":\"100\"\n    \t}\n    ],\n    \"schedule_date\": {{time_30}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\",\n\t\"has_winner_settings\":true,\n\t\"winner_is_quota_percent\":\"0\",\n\t\"winner_quota_value\":\"1\",\n\t\"winner_conversion_field\":\"unique_opens\",\n\t\"winner_send_after_hours\":\"1\"\n}"
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create and send campaign Dynamic ocx feed html",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time_30\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_html_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\") , jsonData.payload.id);",
							"pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_html_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\") , jsonData.payload.name);",
							"pm.globals.unset(\"time_30\");",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"All Esp AB Winner Dynamic Ocx Feed HTML\",\n\t\"type\": \"split\",\n\t\"list_id\": {{list_id}}, \n    \"split_type\": \"email\",\n    \"email_message\": [ {{msg_id_ab_win_send_dynamic_ocx_feed_html}},{{all_esp_ab_winner_common_message}} ],\n    \"segments\": [ \"{{all_esp_segment_id_ab_winner_dynamic_ocx_feed_html}}\" ],\n    \"distribution\": [\n    \t{\n            \"esp_connection_id\":{{connectionId}},\n            \"percent\":\"100\"\n    \t}\n    ],\n    \"schedule_date\": {{time_30}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\",\n\t\"has_winner_settings\":true,\n\t\"winner_is_quota_percent\":\"0\",\n\t\"winner_quota_value\":\"1\",\n\t\"winner_conversion_field\":\"unique_opens\",\n\t\"winner_send_after_hours\":\"1\"\n}"
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create and send campaign ocx feed html",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time_30\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_html_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\") , jsonData.payload.id);",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_html_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\") , jsonData.payload.name);",
							"pm.globals.unset(\"time_30\");",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"All Esp AB Winner Ocx Feed HTML\",\n\t\"type\": \"split\",\n\t\"list_id\": {{list_id}}, \n    \"split_type\": \"email\",\n    \"email_message\": [ {{msg_id_ab_win_send_ocx_feed_html}},{{all_esp_ab_winner_common_message}} ],\n    \"segments\": [ \"{{all_esp_segment_id_ab_winner_ocx_feed_html}}\" ],\n    \"distribution\": [\n    \t{ \n            \"esp_connection_id\":{{connectionId}},\n            \"percent\":\"100\"\n    \t}\n    ],\n    \"schedule_date\": {{time_30}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\",\n\t\"has_winner_settings\":true,\n\t\"winner_is_quota_percent\":\"0\",\n\t\"winner_quota_value\":\"1\",\n\t\"winner_conversion_field\":\"unique_opens\",\n\t\"winner_send_after_hours\":\"1\"\n}"
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create and send campaign ocx feed",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time_30\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\") , jsonData.payload.id);",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\") , jsonData.payload.name);",
							"pm.globals.unset(\"time_30\");",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"All Esp AB Winner Ocx Feed HTML\",\n\t\"type\": \"split\",\n\t\"list_id\": {{list_id}}, \n    \"split_type\": \"email\",\n    \"email_message\": [ {{msg_id_ab_win_send_ocx_feed}},{{all_esp_ab_winner_common_message}} ],\n    \"segments\": [ \"{{all_esp_segment_id_ab_winner_ocx_feed}}\" ],\n    \"distribution\": [ \n    \t{\n            \"esp_connection_id\":{{connectionId}},\n            \"percent\":\"100\"\n    \t}\n    ],\n    \"schedule_date\": {{time_30}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\",\n\t\"has_winner_settings\":true,\n\t\"winner_is_quota_percent\":\"0\",\n\t\"winner_quota_value\":\"1\",\n\t\"winner_conversion_field\":\"unique_opens\",\n\t\"winner_send_after_hours\":\"1\"\n}"
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create and send campaign ocx feed rss",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"time_30\", Math.round((new Date()).getTime() / 1000) + 30);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_rss_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\") , jsonData.payload.id);",
							"pm.globals.set(\"all_esp_ab_winner_ocx_feed_rss_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\") , jsonData.payload.name);",
							"pm.globals.unset(\"time_30\");",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X_USERNAME",
						"type": "text",
						"value": "{{username}}"
					},
					{
						"key": "X_PASSWORD",
						"type": "text",
						"value": "{{password}}"
					},
					{
						"key": "X_ACCOUNT_CODE",
						"type": "text",
						"value": "{{account_code}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"All Esp AB Winner Ocx Feed rss\",\n\t\"type\": \"split\",\n\t\"list_id\": {{list_id}}, \n    \"split_type\": \"email\",\n    \"email_message\": [ {{msg_id_ab_win_send_ocx_feed_rss}},{{all_esp_ab_winner_common_message}} ],\n    \"segments\": [ \"{{all_esp_segment_id_ab_winner_ocx_feed_rss}}\" ],\n    \"distribution\": [ \n    \t{\n            \"esp_connection_id\":{{connectionId}},\n            \"percent\":\"100\"\n    \t}\n    ],\n    \"schedule_date\": {{time_30}},\n    \"notify_onlaunch\": \"0\",\n    \"notify_onfaile d\": \"0\",\n    \"notify_oncomplete\": \"0\",\n\t\"has_winner_settings\":true,\n\t\"winner_is_quota_percent\":\"0\",\n\t\"winner_quota_value\":\"1\",\n\t\"winner_conversion_field\":\"unique_opens\",\n\t\"winner_send_after_hours\":\"1\"\n}"
				},
				"url": {
					"raw": "{{api_domain}}/api/mailings/",
					"host": [
						"{{api_domain}}"
					],
					"path": [
						"api",
						"mailings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delay 200 sec",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/delay?seconds=200",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"delay"
					],
					"query": [
						{
							"key": "seconds",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Dynamic Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamic = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test ab-winner in ocx_feed_dynamic with nested loop is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[2]).to.equal(\"Rooms\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[0]).to.equal(\"Hilton\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[1]).to.equal(\"NYC\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[0]).to.equal(\"Room Type\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[1]).to.equal(\"Count\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[1]).to.equal(\"111\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[0]).to.equal(\"suit\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[1]).to.equal(\"222\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[0]).to.equal(\"Gorgeous\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[1]).to.equal(\"555\");",
							"    });",
							"    postman.setNextRequest(\"Test_Dynamic_Ocx_Feed_Html\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Dynamic Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Dynamic Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamic = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test ab-winner in ocx_feed_dynamic with nested loop is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[0].td[2]).to.equal(\"Rooms\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[0]).to.equal(\"Hilton\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[1]).to.equal(\"NYC\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[0]).to.equal(\"Room Type\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[0].td[1]).to.equal(\"Count\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[1].td[1]).to.equal(\"111\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[0]).to.equal(\"suit\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[2].td[1]).to.equal(\"222\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[0]).to.equal(\"Gorgeous\");",
							"        pm.expect(ocxFeedDynamic.table.tbody.tr[1].td[2].table.tbody.tr[3].td[1]).to.equal(\"555\");",
							"    });",
							"}",
							"if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_count\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Dynamic Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Dynamic_Ocx_Feed_Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamicHtml = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_html\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm1@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name1\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address1\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm2@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name2\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address2\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm3@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name3\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address3\");",
							"    }",
							"    pm.test(`Test Ab Winner in ocx_feed_dynamic_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[1]).to.equal(\"10\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[2]).to.equal(ab_winner_all_esp_list_field_first_name);",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[3]).to.equal(ab_winner_all_esp_list_field_address);",
							"    });",
							"",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name1\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address1\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name2\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address2\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name3\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address3\");",
							"    postman.setNextRequest(\"Test_Ocx_Feed_Html\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"subject\":\"Test AB-Winner Send Message Id Dynamic Ocx Feed Html-{{connectionId}}-{{env}}\",\n\t\"timeout\":60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Dynamic Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedDynamicHtml = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_dynamic_ocx_feed_html\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm1@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name1\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address1\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm2@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name2\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address2\");",
							"    }",
							"    if(jsonData.to.value[0].address === \"ae_abw_dy_of_htm3@hoohem.com\"){",
							"        ab_winner_all_esp_list_field_first_name = pm.globals.get(\"ab_winner_all_esp_list_field_first_name3\");",
							"        ab_winner_all_esp_list_field_address = pm.globals.get(\"ab_winner_all_esp_list_field_address3\");",
							"    }",
							"    pm.test(`Test Ab Winner in ocx_feed_dynamic_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[1]).to.equal(\"10\");",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[2]).to.equal(ab_winner_all_esp_list_field_first_name);",
							"        pm.expect(ocxFeedDynamicHtml.div.table.tr[1].td[3]).to.equal(ab_winner_all_esp_list_field_address);",
							"    });",
							"",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name1\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address1\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name2\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address2\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_first_name3\");",
							"    pm.globals.unset(\"ab_winner_all_esp_list_field_address3\");",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"subject\":\"Test AB-Winner Send Message Id Dynamic Ocx Feed Html-{{connectionId}}-{{env}}\",\n\t\"timeout\":60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Ocx_Feed_Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedHtml = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed_html\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[1]).to.equal(\"Ahmedabad\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[2]).to.equal(\"Ongage\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[3]).to.equal(\"Ahmedabad\");",
							"    });",
							"    postman.setNextRequest(\"Test_Ocx_Feed\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winnner Send Message Id Ocx Feed Html-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxFeedHtml = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed_html\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed_html is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[0]).to.equal(\"Hotel name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[1]).to.equal(\"Hotel location\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[2]).to.equal(\"First Name\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[0].td[3]).to.equal(\"address\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[0]).to.equal(\"BVN\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[1]).to.equal(\"Ahmedabad\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[2]).to.equal(\"Ongage\");",
							"        pm.expect(ocxFeedHtml.div.table.tr[1].td[3]).to.equal(\"Ahmedabad\");",
							"    });",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winnner Send Message Id Ocx Feed Html-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Ocx_Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    var ocxFeedData = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[2]).to.equal(\"Link\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[1]).to.equal(\"India\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[2]).to.equal(\"www.test.com\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[0]).to.equal(\"Suit\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[1]).to.equal(\"Rajasthan\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[2]).to.equal(\"www.google.com\");",
							"    });",
							"    postman.setNextRequest(\"Test_Ocx_Feed_Rss\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    var ocxFeedData = xml2Json(fieldValue[1])",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab Winner in ocx_feed is working Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[0]).to.equal(\"Hotel Name\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[1]).to.equal(\"Location\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[0].td[2]).to.equal(\"Link\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[0]).to.equal(\"Regular\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[1]).to.equal(\"India\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[1].td[2]).to.equal(\"www.test.com\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[0]).to.equal(\"Suit\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[1]).to.equal(\"Rajasthan\");",
							"        pm.expect(ocxFeedData.table.tbody.tr[2].td[2]).to.equal(\"www.google.com\");",
							"    });",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Ocx_Feed_Rss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxRSSTitle = fieldValue[1]",
							"    const ocxRSSLink = fieldValue[2]",
							"    const ocxRSSDesc = fieldValue[3]",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed_rss\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab winner in ocx_rss with title \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSTitle).to.equal(pm.environment.get(\"ocx_rss_title\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with link \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSLink).to.equal(pm.environment.get(\"ocx_rss_link\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with description \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSDesc).to.equal(pm.environment.get(\"ocx_rss_desc\"));",
							"    });",
							"    jsonData.headerLines.forEach(function(data, index) {",
							"    if(data.key.toLowerCase()===\"customheader\"){",
							"        pm.test(`Test customheader \"Is Working\" Time : ${jsonData.date}`, function() {",
							"            const header = data.line.split(\":\")",
							"            pm.expect(header[0].toLowerCase()).to.equal(\"customheader\")",
							"            pm.expect(header[1].toLowerCase().trim()).to.equal(\"test\");",
							"        });",
							"    }",
							"})",
							"    postman.setNextRequest(\"Open_Mail_Dynamic_Ocx_Feed\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed Rss-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Ocx Feed Rss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const espId = pm.globals.get(\"espId\");",
							"var connectionId = pm.globals.get(\"connectionId\");",
							"var jsonData = pm.response.json();",
							"var count = 0",
							"if (pm.response.code === 200) {",
							"    var htmlText = jsonData.html;",
							"    var fieldValue = htmlText.split(\"~!@#~\");",
							"    const ocxRSSTitle = fieldValue[1]",
							"    const ocxRSSLink = fieldValue[2]",
							"    const ocxRSSDesc = fieldValue[3]",
							"    pm.globals.set(\"all_esp_ab_winner_ocx_feed_rss\" + connectionId, jsonData.HTMLOpenLinks[0]);",
							"    count = count + 1",
							"    pm.test(`Test Ab winner in ocx_rss with title \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSTitle).to.equal(pm.environment.get(\"ocx_rss_title\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with link \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSLink).to.equal(pm.environment.get(\"ocx_rss_link\"));",
							"    });",
							"",
							"    pm.test(`Test Ab winner in ocx_rss with description \"Is equals to\" Time : ${jsonData.date}`, function () {",
							"        pm.expect(ocxRSSDesc).to.equal(pm.environment.get(\"ocx_rss_desc\"));",
							"    });",
							"    jsonData.headerLines.forEach(function(data, index) {",
							"    if(data.key.toLowerCase()===\"customheader\"){",
							"        pm.test(`Test customheader \"Is Working\" Time : ${jsonData.date}`, function() {",
							"            const header = data.line.split(\":\")",
							"            pm.expect(header[0].toLowerCase()).to.equal(\"customheader\")",
							"            pm.expect(header[1].toLowerCase().trim()).to.equal(\"test\");",
							"        });",
							"    }",
							"})",
							"} if (count === 0) {",
							"    pm.test(\"mail not received\", function () {",
							"        pm.expect(\"\").to.equal('mail not received');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "ongageqa86",
							"type": "string"
						},
						{
							"key": "username",
							"value": "proxy",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subject\": \"Test AB-Winner Send Message Id Ocx Feed Rss-{{connectionId}}-{{env}}\",\n    \"timeout\": 60000\n}"
				},
				"url": {
					"raw": "https://automated_tests-l2.ongage.net/app/mail_db/getLastMailBySubject",
					"protocol": "https",
					"host": [
						"automated_tests-l2",
						"ongage",
						"net"
					],
					"path": [
						"app",
						"mail_db",
						"getLastMailBySubject"
					]
				}
			},
			"response": []
		},
		{
			"name": "Open_Mail_Dynamic_Ocx_Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_ab_winner_dynamic_ocx_feed{{connectionId}}}}",
					"host": [
						"{{all_esp_ab_winner_dynamic_ocx_feed{{connectionId}}}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Open Mail Dynamic Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_ab_winner_dynamic_ocx_feed_html{{connectionId}}}}",
					"host": [
						"{{all_esp_ab_winner_dynamic_ocx_feed_html{{connectionId}}}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Open Mail Ocx Feed Html",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_ab_winner_ocx_feed_html{{connectionId}}}}",
					"host": [
						"{{all_esp_ab_winner_ocx_feed_html{{connectionId}}}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Open Mail Ocx Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_ab_winner_ocx_feed{{connectionId}}}}",
					"host": [
						"{{all_esp_ab_winner_ocx_feed{{connectionId}}}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Open Mail Ocx Feed Rss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_html\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_rss\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_html\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_html_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_dynamic_ocx_feed_html_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_html_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_html_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_rss_content_delivery_campaign_id_\"+pm.globals.get(\"connectionId\"));",
							"pm.globals.unset(\"all_esp_ab_winner_ocx_feed_rss_content_delivery_campaign_name_\"+pm.globals.get(\"connectionId\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{all_esp_ab_winner_ocx_feed_rss{{connectionId}}}}",
					"host": [
						"{{all_esp_ab_winner_ocx_feed_rss{{connectionId}}}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}